<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Write Post</title>
    <link rel="stylesheet" href="/styles.css"> <!-- Retro theme CSS -->
</head>
<body class="retro-theme">
    <div class="container">
        <h1>Write a Post</h1>
        <form id="postForm">
            <label for="title">Title</label>
            <input type="text" name="title" id="title" required>

            <label for="content">Content</label>
            <textarea name="content" id="content" required></textarea>

            <label for="tags">Tags</label>
            <input type="text" name="tags" id="tags">

            <label for="anonymousPost">Anonymous Post</label>
            <input type="checkbox" name="anonymousPost" id="anonymousPost">

            <button type="submit" class="retro-btn">Create Post</button>
        </form>
    </div>

    <script>
        const token = localStorage.getItem('authToken');  // Get the token from localStorage

        if (!token) {
            alert('Please log in first!');
            window.location.href = '/login';  // Redirect to login if token is not found
        }

        const postForm = document.getElementById('postForm');
        postForm.addEventListener('submit', async (event) => {
            event.preventDefault();  // Prevent default form submission

            // Get form data
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;
            const tags = document.getElementById('tags').value;
            const anonymousPost = document.getElementById('anonymousPost').checked;

            // Prepare request body
            const body = {
                title,
                content,
                tags,
                anonymousPost
            };

            try {
                const response = await fetch('/api/posts', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`  // Attach token in Authorization header
                    },
                    body: JSON.stringify(body)  // Send data as JSON
                });

                const data = await response.json();

                if (response.ok) {
                    alert('Post created successfully');
                } else {
                    alert(data.message);
                }
            } catch (error) {
                console.error(error);
                alert('An error occurred while submitting the post');
            }
        });
    </script>    
</body>
</html>
